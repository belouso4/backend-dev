version: '3.8'
services:
  app:
    container_name: api_app
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
#    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: Europe/Moscow
#    user: 1000:1000
    depends_on:
      - db
      - redis
    networks:
      - api.dev-network
  web:
    image: nginx:alpine
    container_name: api_web
#    build:
#      context: ./
#      dockerfile: web.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./_docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - app
    networks:
      - api.dev-network
      - client_dev-network

  mailhog:
    image: mailhog/mailhog:latest
    logging:
      driver: 'none'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - api.dev-network

  pma:
    image: phpmyadmin:latest
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${DB_HOST}
      - PMA_PORT=${DB_PORT}
    restart: always
    depends_on:
      - db
    ports:
      - 8888:80
    networks:
      - api.dev-network

  # Meilisearch
  meilisearch:
    user: root
    hostname: api.itsownhouse.local
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    volumes:
      - ./_docker/meilisearch/data.ms:/data.ms
    ports:
      - 7700:7700
    environment:
      MEILI_MASTER_KEY: "masterKey"
    depends_on:
      - web
    networks:
      - api.dev-network

  queue-worker:
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
    container_name: queue
    stop_signal: SIGTERM
    working_dir: /var/www/
    restart: always
    volumes:
      - ./:/var/www
    depends_on:
      - web
    command: php artisan queue:work --tries=3 -n -q
    networks:
      - api.dev-network

  scheduler:
    build:
      context: .
      dockerfile: _docker/scheduler/Dockerfile
    container_name: scheduler
    working_dir: /var/www/
    depends_on:
      - web
    volumes:
      - .:/var/www
    networks:
      - api.dev-network
#    env_file: .env

  redis:
    image: redis:4.0
    container_name: app_redis
    ports:
      - '6379:6379'
    networks:
      - api.dev-network
    volumes:
      - redis:/data

  db:
    image: mysql:8.0.25
    volumes:
      - ./tmp/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    ports:
      - 3306:3306
    networks:
      - api.dev-network

networks:
  api.dev-network:
    driver: bridge
  client_dev-network:
    external: true

volumes:
  redis:
    driver: "local"
