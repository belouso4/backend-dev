version: '3.8'
services:
  app:
    container_name: api_app
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
#    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - db
      - redis
    networks:
      - api-network

  web:
    image: nginx:latest
    container_name: api_web
#    build:
#      context: ./
#      dockerfile: web.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./_docker/prod/nginx/conf.d:/etc/nginx/conf.d
#      - ./storage/app:/var/www/storage/app:ro
    ports:
      - 80:80
    depends_on:
      - app
    networks:
      - api-network
      - client-network

  meilisearch:
    user: root
    hostname: api.itsownhouse.local
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    volumes:
      - meilisearch:/data.ms
    ports:
      - 7700:7700
    environment:
      MEILI_MASTER_KEY: "masterKey"
    depends_on:
      - web
    networks:
      - api-network

  queue-worker:
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
    container_name: queue
    stop_signal: SIGTERM
    working_dir: /var/www/
    restart: always
    volumes:
      - ./:/var/www
    depends_on:
      - web
    command: php artisan queue:work --tries=3 -n -q
    networks:
      - api-network

  scheduler:
    build:
      context: .
      dockerfile: _docker/scheduler/Dockerfile
    container_name: scheduler
    working_dir: /var/www/
    depends_on:
      - web
    volumes:
      - .:/var/www
    networks:
      - api-network

  redis:
    image: redis:4.0
    container_name: app_redis
    ports:
      - '6379:6379'
    networks:
      - api-network
    volumes:
      - redis:/data

  db:
    image: mysql:8.0.25
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
#    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    ports:
      - 3306:3306
    networks:
      - api-network

volumes:
  dbdata:
    driver: local
  meilisearch:
    driver: local
  redis:
    driver: local

networks:
  api-network:
    driver: bridge
  client-network:
    external: true

